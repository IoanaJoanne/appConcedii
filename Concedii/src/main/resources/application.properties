#setari pt spring security oauth2 pt a nu le mai pune valorile in cla authorizationserverconfig 
#pt a evita modificari in cls resppectiva
security.oauth2.client-id = my-client
security.oauth2.client-secret = mysecretvalue
security.oauth2.grant-type1 = client_credentials
security.oauth2.grant-type2 = password
security.oauth2.scope.read = read_my_status
security.oauth2.scope.write = write_my_status
security.oauth2.authority1 = ROLE_EMPLOYEE
security.oauth2.authority2 = ROLE_MANAGER
security.oauth2.token-validity-seconds = 5000


#setari pt db (db name, user, password), portul pe care ruleaza appul le fac in application.properties

#set the port on which the app runs on the tomcat server
server.port = 8080

# h2 console settings- to access database cosole on the browser: in this case i used hibernate with h2 database, not mysql
#spring.h2.console.enabled = true
#spring.h2.console.path=/h2
#now u can access the h2 database console on the url http://localhost:8080/h2/
#elimina securitatea pt url /h2 cu permitAll pt a accesa fara autentificare, autorizare
#permitall e in resourceserverconfig class setata, pt url /h2/** pt ca at cand scriu /h2 in browser sunt redirectionata catre /h2/

#datasource/h2 database settings
#spring.datasource.name = concedii - dc specific url-ul automat imi seteaza si numele; setez ori url ori nume pt db
#spring.datasource.username = ioana
#spring.datasource.password = ioana
#spring.datasource.url = jdbc:h2:file:~/concedii

#in cazul in care folosesc hibernate cu baza de date mysql, mysql database settings below:
spring.datasource.url = jdbc:mysql://localhost:3306/concedii
spring.datasource.username = root
spring.datasource.password = ioana
#la fel ca si la h2 pana acum
# ce difera acum este dialectul
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#this is the correct dialect, without it it won't create the schema
#spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#asta cu driver nu mai trebuie adaugata altfel nu merge


#jpa hibernate general settings- valabile pt mysql sau h2 etc
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
 #pe asta  cu hibernate ddl pt database schema puteam sa n-o mai pun